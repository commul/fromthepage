=render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')

=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class, :onsubmit=>'return AddMediumValue()' }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  <input type="hidden" name="page[source_text]"/>
  =validation_summary @page.errors
  .page-toolbar
    .toolbar

      .toolbar_group
        a.button.outline(data-fullscreen-toggle) Fullscreen
      .toolbar_group
        -layout_modes = { 'ltr' => 'Image at the left', 'rtl' => 'Image at the right', 'ttb' => 'Image at the top', 'btt' => 'Image at the bottom' }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =layout_modes[@layout_mode]
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
      .toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span Always show in fullscreen

      .toolbar_group.w100.aright
        -unless @page.status == 'blank'
          span Mark page as blank
          |&nbsp;
          =check_box_tag 'mark_blank', 'yes'
        -else
          span Page is not blank
          |&nbsp;
          =check_box_tag 'mark_blank', 'no'
      .toolbar_group.w100.aright
        span Page Needs Review
        |&nbsp;
        -if @page.status == 'review'
          =f.check_box('needs_review', {checked: true})
        -else
          =f.check_box('needs_review', {checked: false})
      .toolbar_group.w100.aright
        =button_tag 'Save Changes', :name => 'save'


  .page-columns(data-layout-mode="#{@layout_mode}" data-fullheight='{ "bottom": 30, "cssrule": "height" }')
    .page-column
      .page-imagescan
        -if @page.ia_leaf
          =render :partial => '/ia/ia_bookreader_div'
        -elsif @page.sc_canvas
          =render :partial => '/shared/iiif_div'
        -elsif @page.omeka_file
          =render :partial => '/shared/zoom_div', :locals => { :fullsize_url => @page.omeka_file.fullsize_url }
        -else
          =render :partial => '/shared/zoom_div'
    .page-column
      -if @page.status == 'blank'
        .centered
          .centered_content
            p.nodata_text=="This page is marked blank"
        .page-editarea(style=("display:none"))
          =f.text_area :source_text

      -else
        .page-column_actions
          -unless @preview_xml
            =>button_tag 'Preview', :name => 'preview'
          -else
            =>button_tag 'Edit', :name => 'edit'
          -unless @collection.subjects_disabled
            =>button_tag 'Autolink', :name => 'autolink'
        -if @preview_xml
          .page-preview ==xml_to_html(@preview_xml)

        .page-editarea(style=("display:none" if @preview_xml))
          -if @work.scribes_can_edit_titles
            .page-editarea_title
              span =f.label :title, 'Title:', class: 'a50'
              span =f.text_field :title
          .card*{'id'=>'page_source_text', 'contenteditable'=>'true'}
            = @page.source_text

<div class="popupBody">
<p>Select a tag:</p>
<select class="chosen-select-no-results">
  option[ value="" ] = ""
  - @categories.each do |c|
    option[ value=c.title ] =c.title
</select>
</div>

<div class="popupBody2">
<p>Select a tag:</p>
<select class="chosen-select-no-results2">
  option[ value="" ] = ""
  - @categories.each do |c|
    option[ value=c.title ] =c.title
</select>
</div>

<div class="toolbar-top">
  <span class="toolbar">
    <span class="hyphen" style="color: #0606ee">hyphen</span>
    <span class="closing" style="color: #ee0606">closing</span>
  </span>
</div>


table
  - @categories.each do |c|
    tr
      td
        = c.title



.fgfaded ==@work.set_transcription_conventions

.fgfaded
  =render :partial => 'shared/markup_help'

h2.legend Page Notes
.page-notes
  =render :partial => "notes/notes"


-content_for :javascript
  javascript:
    $(function() {
      $('[data-fullscreen-toggle]').on('click', function() {
        $(this).toggleClass('pressed');
        $('.page-editor').toggleClass('fullscreen');
        $(window).trigger('resize.FullHeight');
        $('.zoomer-container').zoomer('resize');
      });
      $('[data-layout-set]').on('click', function() {
        var mode = $(this).data('layout-set');
        Cookies.set('transcribe_layout_mode', mode, { expires: 365 });
        $('[data-layout-mode]').attr('data-layout-mode', mode);
        $('.zoomer-container').zoomer('resize');
      });
      $('#auto-fullscreen').on('change', function() {
        var checked = this.checked ? 'yes' : 'no';
        Cookies.set('auto_fullscreen', checked, { expires: 365 });
      });


      

    });

      var offset,focusEl,anchorNode,beginningOfSelection, selection, enableChosen, d;
      
      var l=document.getElementById('page_source_text');
      console.log("l : "+l);
      console.log("l.textContent : "+l.textContent);

      var xml=l.textContent;
      //xml = xml.replace(/(<br><\/br>)$/, '<br>\&#160\;<\/br>'); //Ne remplace rien
      console.log("xml : "+xml);
      xml = "<div>"+xml+"</div>";
      //xml = xml.replace(/<\/br>/g, '');  // Esli dobavliaiu eto, to oshibka parsinga i voobshe nichego ne pokazyvaet v Transcribe
      //xml = xml.replace(/&nbsp\;/g, '');

      var parser = new DOMParser();
      var doc = parser.parseFromString(xml, "text/xml");
      var allDocContent=doc.childNodes[0];
      //var docChildNode=doc.documentElement.childNodes[0];


      var article=l;
      var firstChild=article.firstChild;
      //console.log("article.firstChild : "+article.firstChild);
      firstChild.parentNode.replaceChild(allDocContent,firstChild);

      var closingElement=article.getElementsByTagName('closing')[0];

        var container = article.parentNode,
        medium = new Medium({
            element: article,
            mode: Medium.richMode,
            attributes: null,
            placeholder:"",
            tags: null,
            pasteAsText: false,
            beforeInsertHtml: function () {
            //console.log("in display_page in medium constructor in beforeInsertHtml");
              //this = Medium.Html
            },
            onFocus: function () {
              //moveCursorToEnd(this);
            }
        });
        

      /*
      $(document).ready(function() {
        $('#page_source_text').wymeditor();
      });
      */

      $(".popupBody").hide();
      $(".popupBody2").hide();

      var config = {
      '.chosen-select'           : {},
      '.chosen-select-deselect'  : {allow_single_deselect:true},
      '.chosen-select-no-single' : {disable_search_threshold:10},
      '.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},
      '.chosen-select-width'     : {width:"95%"}
    }

    for (var selector in config) {
      $(selector).chosen(config[selector]);
    }

    $(".chosen-select-no-results").chosen();
    $(".chosen-select-no-results2").chosen();


      //originalForm
      jQuery('#page_source_text').bind('keydown', 'alt+o', function(e) {  
        // right arrow key pressed
        alert("alt+o");
        medium.focus();
        //medium.addTag($tag);
        //medium.insertHtml('<p class="originalForm">\originalForm\</p>');
        medium.insertHtml('<p class="originalForm">\originalForm');
        return false;
      });


      jQuery.fn.chosen_reset = function(n){
        $(this).chosen('destroy');
        $(this).prop('selectedIndex', 0);
        $(this).chosen(n)
      }


      jQuery('#page_source_text').bind('keydown', 'alt+x', function(e) {
        //medium.splitAtCaret(); //ostavliaet tolko to, chto do kursora, ostalnoe udaliaet

        offset=medium.returnOffset()[0];
        focusEl=medium.returnOffset()[1];
        console.log("offset : "+offset);

        medium.focus();

        medium.focusNadya(offset,focusEl);
        medium.cursorAfterTag(focusEl);
                
        console.log("medium.value() : "+medium.value());

        return false;

      });

       

      //targetForm
      jQuery('#page_source_text').bind('keydown', 'alt+g', function(e) {
        //medium.splitAtCaret(); //ostavliaet tolko to, chto do kursora, ostalnoe udaliaet

        //offset=medium.returnOffset()[0];
        //focusEl=medium.returnOffset()[1];
        //beginningOfSelection=medium.returnOffset()[2];
        //anchorNode=medium.returnOffset()[3];

        [focusOffset,focusNode,anchorOffset,anchorNode]=medium.returnOffset();

        selection = window.getSelection();

        //var value=$('#page_source_text').value;

        if(selection.isCollapsed){
          $(".popupBody").show();
        
          /*
          enableChosen = setTimeout(function() {
            $(".chosen-select-no-results").trigger('chosen:activate');
          }, 250);
          */

          $(".chosen-select-no-results").trigger('chosen:activate');

          $(".chosen-select-no-results").chosen().change(function(event){
            if(event.target == this){
              $tag=$(this).val();
              if($tag!= null && $tag!=''){
                //$(".chosen-select-no-results").trigger('chosen:updated');
                //$(".chosen-select-no-results").focus().val($(".chosen-select-no-results").val());

                medium.focus();

                d = new Date();
                milliseconds = d.getTime();
                tagCode=milliseconds.toString();


                $tag='<'+$tag+' tagcode="'+tagCode+'" class="medium-'+$tag+'"></'+$tag+'>';

                medium.focusNadya(focusOffset,focusNode);
                medium.insertHtmlNadya($tag, focusOffset, focusNode);

                $('.chosen-select-no-results').chosen_reset(config);
                $(".popupBody").hide();
                
                console.log("medium.value() : "+medium.value());

                return false;
              }
              return false;
            }
            return false;
          });

        }else{ //If selection is not collapsed
          $(".popupBody2").show();
        

          $(".chosen-select-no-results2").trigger('chosen:activate');
          /*
          enableChosen = setTimeout(function() {
            $(".chosen-select-no-results2").trigger('chosen:activate');
          }, 250);
          */

          $(".chosen-select-no-results2").chosen().change(function(event2){
          if(event2.target == this){
              $tag2=$(this).val();
              if($tag2!= null && $tag2!=''){
                //medium.focus();
                medium.tagSelection($tag2,anchorNode,focusNode,anchorOffset, focusOffset);
                $('.chosen-select-no-results2').chosen_reset(config);
                $(".popupBody2").hide();
                return false;
              }
              return false;
          }
          return false;
        });

        } // End if selection.isCollapsed

        return false;
      });


    article.highlight = function() {
      if (document.activeElement !== article) {
        medium.select();
      }
    };

    $( ".hyphen" ).mousedown(function() {
      d = new Date();
      article.highlight();
      medium.invokeElement('hyphen', {
        tagcode: d.getTime().toString()
      });
      return false;
    });

    $( ".closing" ).mousedown(function() {
      d = new Date();
      article.highlight();
      medium.invokeElement('closing', {
        tagcode: d.getTime().toString()
      });
      return false;
    });

    function AddMediumValue() {
        mediumValue = medium.value();
        mediumValue = mediumValue.replace(/\&nbsp\;/g, '\&#160\;');
        mediumValue = mediumValue.replace(/<br>/g, '<br></br>');
        mediumValue = mediumValue.replace(/<\/br><\/br>/g, '</br>');
        mediumValue = mediumValue.replace(/^<div>/, '');
        mediumValue = mediumValue.replace(/<\/div>$/, '');
        document.getElementsByName("page[source_text]")[0].value=mediumValue;
        return true;   // Returns Value
      }
javascript:  mixpanel.track("Transcribe Page");
