=render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')

=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  =validation_summary @page.errors
  .page-toolbar
    .toolbar

      .toolbar_group
        a.button.outline(data-fullscreen-toggle) Fullscreen
      .toolbar_group
        -layout_modes = { 'ltr' => 'Image at the left', 'rtl' => 'Image at the right', 'ttb' => 'Image at the top', 'btt' => 'Image at the bottom' }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =layout_modes[@layout_mode]
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
      .toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span Always show in fullscreen

      .toolbar_group.w100.aright
        -unless @page.status == 'blank'
          span Mark page as blank
          |&nbsp;
          =check_box_tag 'mark_blank', 'yes'
        -else
          span Page is not blank
          |&nbsp;
          =check_box_tag 'mark_blank', 'no'
      .toolbar_group.w100.aright
        span Page Needs Review
        |&nbsp;
        -if @page.status == 'review'
          =f.check_box('needs_review', {checked: true})
        -else
          =f.check_box('needs_review', {checked: false})
      .toolbar_group.w100.aright
        =button_tag 'Save Changes', :name => 'save'


  .page-columns(data-layout-mode="#{@layout_mode}" data-fullheight='{ "bottom": 30, "cssrule": "height" }')
    .page-column
      .page-imagescan
        -if @page.ia_leaf
          =render :partial => '/ia/ia_bookreader_div'
        -elsif @page.sc_canvas
          =render :partial => '/shared/iiif_div'
        -elsif @page.omeka_file
          =render :partial => '/shared/zoom_div', :locals => { :fullsize_url => @page.omeka_file.fullsize_url }
        -else
          =render :partial => '/shared/zoom_div'
    .page-column
      -if @page.status == 'blank'
        .centered
          .centered_content
            p.nodata_text=="This page is marked blank"
        .page-editarea(style=("display:none"))
          =f.text_area :source_text

      -else
        .page-column_actions
          -unless @preview_xml
            =>button_tag 'Preview', :name => 'preview'
          -else
            =>button_tag 'Edit', :name => 'edit'
          -unless @collection.subjects_disabled
            =>button_tag 'Autolink', :name => 'autolink'
        -if @preview_xml
          .page-preview ==xml_to_html(@preview_xml)

        .page-editarea(style=("display:none" if @preview_xml))
          -if @work.scribes_can_edit_titles
            .page-editarea_title
              span =f.label :title, 'Title:', class: 'a50'
              span =f.text_field :title
          .card*{'id'=>'page_source_text', 'contenteditable'=>'true'}
            = @page.source_text

<div class="popupBody">
<p>Select your offer:</p>
<select class="chosen-select-no-results">
  <option></option>
  <option value="greeting" disabled="disabled">greeting</option>
  <option value="closing">closing</option>
  <option value="hyphen">hyphen</option>
</select>
</div>

.fgfaded ==@work.set_transcription_conventions

.fgfaded
  =render :partial => 'shared/markup_help'

h2.legend Page Notes
.page-notes
  =render :partial => "notes/notes"


-content_for :javascript
  javascript:
    $(function() {
      $('[data-fullscreen-toggle]').on('click', function() {
        $(this).toggleClass('pressed');
        $('.page-editor').toggleClass('fullscreen');
        $(window).trigger('resize.FullHeight');
        $('.zoomer-container').zoomer('resize');
      });
      $('[data-layout-set]').on('click', function() {
        var mode = $(this).data('layout-set');
        Cookies.set('transcribe_layout_mode', mode, { expires: 365 });
        $('[data-layout-mode]').attr('data-layout-mode', mode);
        $('.zoomer-container').zoomer('resize');
      });
      $('#auto-fullscreen').on('change', function() {
        var checked = this.checked ? 'yes' : 'no';
        Cookies.set('auto_fullscreen', checked, { expires: 365 });
      });


      //from http://jakiestfu.github.io/Medium.js/docs/  Rich with insert HTML
      
      var article = document.getElementById('page_source_text'),
        container = article.parentNode,
        medium = new Medium({
            element: article,
            mode: Medium.richMode,
            attributes: null,
            tags: null,
            beforeInsertHtml: function () {
            console.log("in display_page in medium constructor in beforeInsertHtml");
              //this = Medium.Html
            },
            onFocus: function () {
              moveCursorToEnd(this);
            }
        });
        

      /*
      $(document).ready(function() {
        $('#page_source_text').wymeditor();
      });
      */

      $(".popupBody").hide();

      var config = {
      '.chosen-select'           : {},
      '.chosen-select-deselect'  : {allow_single_deselect:true},
      '.chosen-select-no-single' : {disable_search_threshold:10},
      '.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},
      '.chosen-select-width'     : {width:"95%"}
    }
    for (var selector in config) {
      $(selector).chosen(config[selector]);
    }

    $(".chosen-select-no-results").chosen();


      //Works
      jQuery('#page_source_text').bind('keydown', 'alt+i', function(e) {  
        // right arrow key pressed
        console.log("i key pressed");
        alert("i key pressed");

        medium.focus();
        medium.insertHtml('<p style="background-color: yellow;">\Happy day!  I can work with buttons too!\</p>');
        return false;
      });


      //Error
      jQuery('#page_source_text').bind('keydown', 'alt+r', function(e) {  
        // right arrow key pressed
        alert("alt+r");
        medium.focus();
        medium.insertHtml('<error>');

        return false;
      });

      //originalForm
      jQuery('#page_source_text').bind('keydown', 'alt+o', function(e) {  
        // right arrow key pressed
        alert("alt+o");
        medium.focus();
        medium.insertHtml('<p class="originalForm">\originalForm\</p>');
        return false;
      });


      function moveCursorToEnd(el) {
      console.log("display_page moveCursorToEnd function from the internet");
        if (typeof el.selectionStart == "number") {
          el.selectionStart = el.selectionEnd = el.value.length;
        } else if (typeof el.createTextRange != "undefined") {
          el.focus();
          var range = el.createTextRange();
          range.collapse(false);
          range.select();
        }
      }

      //targetForm
      jQuery('#page_source_text').bind('keydown', 'alt+g', function(e) {
        //medium.splitAtCaret();

        $(".popupBody").show();
        
        var enableChosen = setTimeout(function() {
          $(".chosen-select-no-results").trigger('chosen:activate');
        }, 250);

        $(".chosen-select-no-results").chosen().change(function(event){
          if(event.target == this){
              alert($(this).val());
              $tag=$(this).val();

              //$(".chosen-select-no-results").focus().val($(".chosen-select-no-results").val());
              //('#page_source_text').focus();
              //moveCursorToEnd($("#page_source_text"));
              medium.focus();
              console.log("display_page between focus and insertHtml");
              //medium.caretToEnd();
              //medium.moveCursorToEnd();
              //medium.splitAtCaret();
              //medium.paste($tag);
              //medium.addTag($tag);
              medium.insertHtml($tag);
              return false;
          }
        });

        //medium.focus();
        //medium.insertHtml('<targetForm>');

        return false;
      });

      //targetForm
      jQuery('#page_source_text').bind('keydown', 'alt+j', function(e) {  
        // right arrow key pressed
        alert("alt+j");
        medium.focus();
        medium.insertHtml('</>');

        return false;
      });
      

    });
javascript:  mixpanel.track("Transcribe Page");
