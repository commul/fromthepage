=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 7, :collection_id => @collection.id }})

-unless @works.empty?
  section.collection-stats
    .collection-stats_counters
      .counter(data-prefix="#{number_with_delimiter @collection.work_count}") #{'Work'.pluralize(@collection.work_count)}
      .counter(data-prefix="#{number_with_delimiter @collection.page_count}") #{'Page'.pluralize(@collection.page_count)}
      .counter(data-prefix="#{number_with_delimiter @collection.comment_count}") #{'Note'.pluralize(@collection.comment_count)}
      -unless @collection.subjects_disabled
        .counter(data-prefix="#{number_with_delimiter @collection.subject_count}") #{'Subject'.pluralize(@collection.subject_count)}
        .counter(data-prefix="#{number_with_delimiter @collection.mention_count}") #{'Reference'.pluralize(@collection.mention_count)}
      .counter(data-prefix="#{number_with_delimiter @collection.contributor_count}") #{'Collaborator'.pluralize(@collection.contributor_count)}
    .collection-stats_counters
      .counter(data-prefix="#{number_with_delimiter @collection.transcription_count}") #{'Page'.pluralize(@collection.transcription_count)} transcribed
      .counter(data-prefix="#{number_with_delimiter @collection.edit_count}") Page edits
      -unless @collection.subjects_disabled
        .counter(data-prefix="#{number_with_delimiter @collection.index_count}") #{'Page'.pluralize(@collection.index_count)} indexed
      .counter(data-prefix="#{number_with_delimiter @collection.translation_count}") #{'Page'.pluralize(@collection.translation_count)} translated
      .counter(data-prefix="#{number_with_delimiter @collection.ocr_count}") OCR #{'Correction'.pluralize(@collection.ocr_count)}


  h4.legend.fglight Last 7 Days Statistics
  section.collection-stats_recent
    .counter(data-prefix="#{number_with_delimiter @collection.contributor_count(7)}") #{'Collaborator'.pluralize(@collection.contributor_count(7))}
    .counter(data-prefix="#{number_with_delimiter @collection.transcription_count(7)}") #{'Page'.pluralize(@collection.transcription_count(7))} transcribed
    .counter(data-prefix="#{number_with_delimiter @collection.edit_count(7)}") Page #{'edit'.pluralize(@collection.edit_count(7))}
    -unless @collection.subjects_disabled
      .counter(data-prefix="#{number_with_delimiter @collection.mention_count(7)}") #{'Reference'.pluralize(@collection.mention_count(7))}
      .counter(data-prefix="#{number_with_delimiter @collection.new_subject_count(7)}") New #{'subject'.pluralize(@collection.new_subject_count(7))}
    .counter(data-prefix="#{number_with_delimiter @collection.comment_count(7)}") #{'Note'.pluralize(@collection.comment_count(7))}
    .counter(data-prefix="#{number_with_delimiter @collection.translation_count(7)}") #{'Page'.pluralize(@collection.translation_count(7))} translated
    .counter(data-prefix="#{number_with_delimiter @collection.ocr_count(7)}") OCR #{'Correction'.pluralize(@collection.ocr_count(7))}

  h2 Work Progress
  ul.collection-work-stats
    -@works.each do |w|
      -unless w.supports_translation
        -progress_annotated = w.work_statistic.pct_annotated.round
        -progress_review = w.work_statistic.pct_needs_review.round
        -progress_completed = w.work_statistic.pct_completed.round

        -if w.ocr_correction
          -completed = "corrected"
        -else
          -completed = "transcribed"
      -else
        -progress_annotated = w.work_statistic.pct_translation_annotated.round
        -progress_review = w.work_statistic.pct_translation_needs_review.round
        -progress_completed = w.work_statistic.pct_translation_completed.round
        -completed = "translated"

      li
        span =link_to w.title, { :controller => 'display', :action => 'list_pages', :work_id => w.id }
        span =="<b>#{w.work_statistic.total_pages}</b> #{'page'.pluralize(w.work_statistic.total_pages)}"
        -unless @collection.subjects_disabled
          span =="<b>#{progress_annotated}</b> indexed"
        span =="<b>#{progress_completed}</b> #{completed}"
        span =="<b>#{progress_review}</b> needs review" unless progress_review == 0
        span
          span.progress
            -unless @collection.subjects_disabled
              span(style="width:#{progress_annotated}")
              span(style="width:#{progress_completed - progress_annotated}")
              -unless progress_review == 0
                span(style="width:#{progress_review}")

            -else
              span(style="width:#{progress_completed}")
              -unless progress_review == 0
                span(style="width:#{progress_review}")

-if user_signed_in? && current_user.like_owner?(@collection) && current_user.id==@collection.owner_user_id
  h2 Collaborators

  .collection-users.justified
    .justified_box>
      -unless @all_transcribers.empty?
        h3 Transcribing
        -@all_transcribers.each do |user, count|
          .collection-user(data-prefix="#{count}")
            =link_to({ :controller => 'user', :action => 'profile', :user_id => user.id }, class: 'collection-user_link')
              span.userpic =gravatar_image_tag user.email, :alt => user.display_name
              span.vmiddle =user.display_name
      -else
        h3 Transcribing
        p.a50 No transcribers

    .justified_box>
      -unless @all_editors.empty?
        h3 Editing
        -@all_editors.each do |user, count|
          .collection-user(data-prefix="#{count}")
            =link_to({ :controller => 'user', :action => 'profile', :user_id => user.id }, class: 'collection-user_link')
              span.userpic =gravatar_image_tag user.email, :alt => user.display_name
              span.vmiddle =user.display_name
      -else
        h3 Editing
        p.a50 No editors
      
    -unless @collection.subjects_disabled
      .justified_box>
        -unless @all_indexers.empty?
          h3 Indexing
          -@all_indexers.each do |user, count|
            .collection-user(data-prefix="#{count}")
              =link_to({ :controller => 'user', :action => 'profile', :user_id => user.id }, class: 'collection-user_link')
                span.userpic =gravatar_image_tag user.email, :alt => user.display_name
                span.vmiddle =user.display_name
        -else
          h3 Indexing
          p.a50 No indexers

=render({ :partial => '/shared/collection_footer' })