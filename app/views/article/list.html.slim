=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 6, :collection_id => @collection.id }})

-if @collection.categories.present?
  -if @page
    -page_link = link_to('click here', { :controller => 'transcribe', :action => 'assign_categories', :page_id => @page.id })
    .category-back-message =="Once you finish editing categories, #{page_link} to return back to &ldquo;#{@page.title}&rdquo; page."

  .collection-categories
    .category-tree
      h3 Categories
      ==display_categories(@collection.categories, nil) do |category|
        -ret = "<a href=\"#category-#{category.id}\" class=\"tree-item\">"
        -if category.children.any?
          -ret << "<span class=\"tree-bullet\"></span>"
        -ret << "<span>#{category.title}</span>"
        -ret << "</a>"
      -if @uncategorized_articles.present?
        ul
          li: a.tree-item(href="#category-none") Uncategorized

    .category-articles
      -@collection.categories.each do |category|
        dl.category-article(id="category-#{category.id}")
          dt
            .headline
              //h3.headline_title ==(category.ancestors.reverse.push(category).map { |c| c.title }).join(" &rarr; ")
              h3.headline_title(data-category-title="#{category.id}") =category.title
              -if user_signed_in? && current_user.like_owner?(@collection)
                .headline_aside
                  dl.dropdown.right
                    dt.h5
                      span Actions
                      =svg_symbol '#big-menu', class: 'icon icon-big'
                    dd
                      =link_to 'Rename Category', { :controller => 'category', :action => 'edit', :collection_id => @collection.id, :category_id => category.id }, 'data-litebox' => ''
                      =link_to 'Add Child Category', { :controller => 'category', :action => 'add_new', :collection_id => @collection.id, :category_id => category.id }, 'data-litebox' => ''
                      =link_to 'Add Root Category', { :controller => 'category', :action => 'add_new', :collection_id => @collection.id }, 'data-litebox' => ''
                      hr
                      =link_to 'Delete Category', { :controller => 'category', :action => 'delete', :collection_id => @collection.id, :category_id => category.id }, class: 'fgred', data: { :confirm => 'Are you sure you want to delete this category and all its subcategories? After deleting you won\'t be able to recover it!' }

                      hr
                      =link_to 'Define Category Style', { :controller => 'category', :action => 'define_style', :collection_id => @collection.id, :category_id => category.id }, 'data-litebox' => ''
                      hr
                      =link_to 'Define Category Types', { :controller => 'category', :action => 'define_types', :collection_id => @collection.id, :category_id => category.id }, 'data-litebox' => ''
                      hr
                      =link_to 'Apply All Categories Changes', { :controller => 'category', :action => 'apply_all_styles', :collection_id => @collection.id, :category_id => category.id }
                      hr
                      =link_to 'Discard All Styles', { :controller => 'category', :action => 'discard_all_styles', :collection_id => @collection.id, :category_id => category.id }
          dd
            -if category.articles.empty?
              p.acenter.fglight There are no subjects for the category selected
            -else
              -category.articles.each do |article|
                =link_to article.title, { :action => 'show', :article_id => article.id }
      -if @uncategorized_articles.present?
        dl.category-article#category-none
          dt: h3 Uncategorized subjects
          dd
            -@uncategorized_articles.each do |article|
              =link_to article.title, { :action => 'show', :article_id => article.id }
-else
  -add_category = link_to 'Create the first category', { :controller => 'category', :action => 'add_new', :collection_id => @collection.id }, 'data-litebox' => ''
  .nodata
    h4.nodata_title No Categories
    p.nodata_text
      =="There are no subject categories in the collection.<br>"
      =="#{add_category} you'll use to group subjects." if user_signed_in? && current_user.like_owner?(@collection)

=render({ :partial => '/shared/collection_footer' })

-content_for :javascript
  javascript:
    $(function() {
      $(window).on('hashchange', function() {
        var selected = window.location.hash || $('.tree-item:first').attr('href');
        var $tree_item = $('.tree-item[href="'+selected+'"]');

        if($tree_item.length !== 0) {
          $tree_item.parentsUntil('.category-tree', 'li').addClass('expanded');
          $('.tree-item.selected').removeClass('selected');
          $tree_item.addClass('selected');
          $(selected).show().siblings().hide();
        }
      }).trigger('hashchange');

    });


    function addField() {
      var html = "<input name='type[]' class='type_input_field' type='text'><br>";
      $('#fields').append(html);
    }

    function deleteField(id) {
      var html = "<input type='hidden' name='delete_type[]' value='"+id+"'>";
      $('#fields').append(html);
      document.getElementById("delete_type_"+id).disabled=true;
    }

    function verifyValue(){
      var value=document.getElementById('category_title').value;
      console.log("value: "+value);
      value=value.replace(/[ ]+/g, "_");
      value=value.replace(/[^a-zA-Z0-9_\-]+/g, "");
      console.log("value: "+value);
      document.getElementById('category_title').value=value;
      return value;
    }

    
    function verifyValueType(){
      var val, i;
      var elms=document.getElementsByClassName('type_input_field');

      for (i = 0; i < elms.length; i++) {
        val=elms[i].value;
        val=val.replace(/[ ]+/g, "_");
        val=val.replace(/[^a-zA-Z0-9_\-]+/g, "");
        elms[i].value = val;
        
      }

      return;
    }